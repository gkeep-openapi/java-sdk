/*
 * Gkeep API
 * Gkeep API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * VehicleDailyStats
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-13T13:13:52.012Z[GMT]")
public class VehicleDailyStats {
  @SerializedName("engine_on_time")
  private Integer engineOnTime = null;

  @SerializedName("stopped_time")
  private Integer stoppedTime = null;

  @SerializedName("distance")
  private Integer distance = null;

  @SerializedName("fuel_cost")
  private Integer fuelCost = null;

  @SerializedName("consumption")
  private Integer consumption = null;

  @SerializedName("average_consumption")
  private Integer averageConsumption = null;

  @SerializedName("average_consumption_hour")
  private Integer averageConsumptionHour = null;

  @SerializedName("abnormal_consumption")
  private Integer abnormalConsumption = null;

  @SerializedName("real_consumption")
  private Integer realConsumption = null;

  @SerializedName("objective")
  private String objective = null;

  public VehicleDailyStats engineOnTime(Integer engineOnTime) {
    this.engineOnTime = engineOnTime;
    return this;
  }

   /**
   * Get engineOnTime
   * @return engineOnTime
  **/
  @Schema(example = "0", description = "")
  public Integer getEngineOnTime() {
    return engineOnTime;
  }

  public void setEngineOnTime(Integer engineOnTime) {
    this.engineOnTime = engineOnTime;
  }

  public VehicleDailyStats stoppedTime(Integer stoppedTime) {
    this.stoppedTime = stoppedTime;
    return this;
  }

   /**
   * Get stoppedTime
   * @return stoppedTime
  **/
  @Schema(example = "0", description = "")
  public Integer getStoppedTime() {
    return stoppedTime;
  }

  public void setStoppedTime(Integer stoppedTime) {
    this.stoppedTime = stoppedTime;
  }

  public VehicleDailyStats distance(Integer distance) {
    this.distance = distance;
    return this;
  }

   /**
   * Get distance
   * @return distance
  **/
  @Schema(example = "0", description = "")
  public Integer getDistance() {
    return distance;
  }

  public void setDistance(Integer distance) {
    this.distance = distance;
  }

  public VehicleDailyStats fuelCost(Integer fuelCost) {
    this.fuelCost = fuelCost;
    return this;
  }

   /**
   * Get fuelCost
   * @return fuelCost
  **/
  @Schema(example = "0", description = "")
  public Integer getFuelCost() {
    return fuelCost;
  }

  public void setFuelCost(Integer fuelCost) {
    this.fuelCost = fuelCost;
  }

  public VehicleDailyStats consumption(Integer consumption) {
    this.consumption = consumption;
    return this;
  }

   /**
   * Get consumption
   * @return consumption
  **/
  @Schema(example = "0", description = "")
  public Integer getConsumption() {
    return consumption;
  }

  public void setConsumption(Integer consumption) {
    this.consumption = consumption;
  }

  public VehicleDailyStats averageConsumption(Integer averageConsumption) {
    this.averageConsumption = averageConsumption;
    return this;
  }

   /**
   * Get averageConsumption
   * @return averageConsumption
  **/
  @Schema(example = "0", description = "")
  public Integer getAverageConsumption() {
    return averageConsumption;
  }

  public void setAverageConsumption(Integer averageConsumption) {
    this.averageConsumption = averageConsumption;
  }

  public VehicleDailyStats averageConsumptionHour(Integer averageConsumptionHour) {
    this.averageConsumptionHour = averageConsumptionHour;
    return this;
  }

   /**
   * Get averageConsumptionHour
   * @return averageConsumptionHour
  **/
  @Schema(example = "0", description = "")
  public Integer getAverageConsumptionHour() {
    return averageConsumptionHour;
  }

  public void setAverageConsumptionHour(Integer averageConsumptionHour) {
    this.averageConsumptionHour = averageConsumptionHour;
  }

  public VehicleDailyStats abnormalConsumption(Integer abnormalConsumption) {
    this.abnormalConsumption = abnormalConsumption;
    return this;
  }

   /**
   * Get abnormalConsumption
   * @return abnormalConsumption
  **/
  @Schema(example = "0", description = "")
  public Integer getAbnormalConsumption() {
    return abnormalConsumption;
  }

  public void setAbnormalConsumption(Integer abnormalConsumption) {
    this.abnormalConsumption = abnormalConsumption;
  }

  public VehicleDailyStats realConsumption(Integer realConsumption) {
    this.realConsumption = realConsumption;
    return this;
  }

   /**
   * Get realConsumption
   * @return realConsumption
  **/
  @Schema(example = "0", description = "")
  public Integer getRealConsumption() {
    return realConsumption;
  }

  public void setRealConsumption(Integer realConsumption) {
    this.realConsumption = realConsumption;
  }

  public VehicleDailyStats objective(String objective) {
    this.objective = objective;
    return this;
  }

   /**
   * Get objective
   * @return objective
  **/
  @Schema(example = "25", description = "")
  public String getObjective() {
    return objective;
  }

  public void setObjective(String objective) {
    this.objective = objective;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VehicleDailyStats vehicleDailyStats = (VehicleDailyStats) o;
    return Objects.equals(this.engineOnTime, vehicleDailyStats.engineOnTime) &&
        Objects.equals(this.stoppedTime, vehicleDailyStats.stoppedTime) &&
        Objects.equals(this.distance, vehicleDailyStats.distance) &&
        Objects.equals(this.fuelCost, vehicleDailyStats.fuelCost) &&
        Objects.equals(this.consumption, vehicleDailyStats.consumption) &&
        Objects.equals(this.averageConsumption, vehicleDailyStats.averageConsumption) &&
        Objects.equals(this.averageConsumptionHour, vehicleDailyStats.averageConsumptionHour) &&
        Objects.equals(this.abnormalConsumption, vehicleDailyStats.abnormalConsumption) &&
        Objects.equals(this.realConsumption, vehicleDailyStats.realConsumption) &&
        Objects.equals(this.objective, vehicleDailyStats.objective);
  }

  @Override
  public int hashCode() {
    return Objects.hash(engineOnTime, stoppedTime, distance, fuelCost, consumption, averageConsumption, averageConsumptionHour, abnormalConsumption, realConsumption, objective);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VehicleDailyStats {\n");
    
    sb.append("    engineOnTime: ").append(toIndentedString(engineOnTime)).append("\n");
    sb.append("    stoppedTime: ").append(toIndentedString(stoppedTime)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    fuelCost: ").append(toIndentedString(fuelCost)).append("\n");
    sb.append("    consumption: ").append(toIndentedString(consumption)).append("\n");
    sb.append("    averageConsumption: ").append(toIndentedString(averageConsumption)).append("\n");
    sb.append("    averageConsumptionHour: ").append(toIndentedString(averageConsumptionHour)).append("\n");
    sb.append("    abnormalConsumption: ").append(toIndentedString(abnormalConsumption)).append("\n");
    sb.append("    realConsumption: ").append(toIndentedString(realConsumption)).append("\n");
    sb.append("    objective: ").append(toIndentedString(objective)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
